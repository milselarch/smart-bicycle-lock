#include <SoftwareSerial.h>

// creates a "virtual" serial port/UART
// connect BT module TX to D13
// connect BT module RX to D15
// connect BT Vcc to 5V, GND to GND

SoftwareSerial BT(D7, D8);

class PotatoClient {
private: 
    unsigned char recvPacket[257];
    unsigned char header[255];
    unsigned char body[255];

    unsigned short RECV_STATUS = 0;
    unsigned short STARTED = 0;
    unsigned char recvIndex = 0;

    unsigned short headerLength;
    unsigned short bodyLength;
    
    unsigned long startTime;
    
public:
    PotatoClient() {
        this.resetTimer();
    }

    unsigned long timePassed() {
        unsigned long duration = millis() - this.startTime;
        return duration;
    }
    
    void resetTimer() {
        this.startTime = millis();
    }

    void sendPacket(
        const char *header,
        const char *body,
        const unsigned short headerLength,
        const unsigned short bodyLength
        ) {

        const unsigned int totalLength = headerLength + bodyLength + 1;
        BT.print(totalLength);
        BT.print(headerLength);

        for (int i = 0; i < headerLength; i++) {
            BT.print(header[i]);
        }

        for (int i = 0; i < bodyLength; i++) {
            BT.print(body[i]);
        }
    }

    void cheak() {
        if (this.timePassed() > 1500 and this.RECV_STATUS == 1) {
            
        }
        while (BT.available()) {
        // if text arrived in from BT serial...
            data += char(BT.read());
            
            while (data.length() > data[0]) {
                BT.print("data-raw: ");
                BT.println(data);
                
                header = data.substring(1, data[1]);
                body = data.substring(data[1], data[0]);
                data = data.substring(data[0], data.length());
                
                BT.print("header: ");
                BT.println(header);
            
                BT.print("body: ");
                BT.println(body);
            
                BT.print("data-left: ");
                BT.println(data);
            }
        }
    }
};

PotatoClient BTClient;

void setup() {
  	// set digital pin to control as an output
	//pinMode(13, OUTPUT);
	// set the data rate for the SoftwareSerial port
    Serial.begin(115200);
    
	BT.begin(9600);
	// Send test message to other device
	BT.print("Hello from Arduino");
}


void loop() {
    BTClient.cheak();
    delay(100);
}


